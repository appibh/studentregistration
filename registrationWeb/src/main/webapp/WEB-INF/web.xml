<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">

	<context-param>
		<param-name>contextClass</param-name>
		<param-value>
          org.springframework.web.context.support.AnnotationConfigWebApplicationContext
      </param-value>
	</context-param>

	<!-- Configuration locations must consist of one or more comma- or space-delimited 
		fully-qualified @Configuration classes. Fully-qualified packages may also 
		be specified for component-scanning -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>org.registration.web.config</param-value>
	</context-param>

	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>Jersey REST Service</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<!-- Register jersey resources  -->
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>org.registration.web.resource</param-value>
		</init-param>
		<!-- Register Jackson feature to get json responses -->
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>org.registration.web.jersey.config.RegistrationApplication</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Jersey REST Service</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
</web-app>
